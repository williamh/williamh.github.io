---
#
# .github/workflows/yaml.yaml
#
name: Yaml Workflow
on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - main
      - develop
  pull_request:
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  stage1:
    name: Change Check
    runs-on: 'ubuntu-latest'
    outputs:
      docs_changed: ${{ steps.check_file_changed.outputs.docs_changed }}
    steps:
      - name: Checkout Repo
        id: checkout-repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}
          submodules: recursive
      - name: Get Change List
        id: check_file_changed
        run: |-
          {
            # Diff HEAD with the previous commit then output to stdout.
            printf "=== Which files changed? ===\n"
            GIT_DIFF="$(git diff --name-only HEAD^ HEAD)"
            printf "%s\n" "${GIT_DIFF}"
            printf "\n"

            # Check if the files are present in the changed file list (added, modified, deleted) then output to stdout.
            HAS_DIFF=false
            printf "=== Which Yaml files changed? ===\n"
            if printf "%s\n" "${GIT_DIFF}" | grep -E '^(.*[.](yml|yaml)|.github/workflows/yaml.yaml|.yamllint.yaml)$'; then
              HAS_DIFF=true
            fi
            printf "\n"

            # Did files change?
            printf "=== Did Yaml files change? ===\n"
            printf "%s\n" "${HAS_DIFF}"
            printf "\n"

            # Set the output named "docs_changed"
            printf "%s=%s\n" "docs_changed" "${HAS_DIFF}" | tee -a "${GITHUB_OUTPUT}"
          } | tee -a "${GITHUB_STEP_SUMMARY}"
  stage2:
    name: yaml
    runs-on: ubuntu-latest
    needs:
      - stage1
    if: needs.stage1.outputs.docs_changed == 'True'
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4
      - name: YamlLint with Reviewdog
        uses: reviewdog/action-yamllint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # Change reviewdog reporter if you need [github-pr-check,github-check,github-pr-review].
          reporter: github-check
          # Change reporter level if you need. GitHub Status Check won't become failure with warning.
          level: error
          # Enable this to fail the check when violations are found
          fail_on_error: true
          # yamllint command flags
          yamllint_flags: '.'
      - name: Show yamllint Version
        id: yamllint-version
        run: |-
          yamllint --version
